@page "/"
@using ConsultaCNPJ.Model
@using RestSharp
@using Newtonsoft.Json
<style>
	body {
		background-color: #f0f0f0;
	}
</style>

<PageTitle>Index</PageTitle>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
	<div class="alert alert-danger" role="alert" style="display: @(_visibleAlert ? "block" : "none")">
		<span class="close" role="button" @onclick="CloseAlert">X</span>
		@ErrorMessage
	</div>
}

<div class="container text-center" style=" display: @(Resultado == null ? "block" : "none")">
	<h1>Verificar Situação Cadastral</h1>
	<div class ="row justify-content-center">
		<div class="col-md-6">
			<input class="form-control" @bind="CNPJ" placeholder="Digite o CNPJ" />
		</div>
	</div>
	<div class="row justify-content-center  mt-3">
		<button class="btn btn-primary col-md-6" @onclick="Verificar" disabled="@isLoading">Verificar</button>
	</div>
</div>


@if (isLoading)
{
	<div style="display:flex; gap:10px; justify-content:center; align-items:center">
		<div class="spinner-border mt-3" role="status"></div>
		Buscando... 
	</div>
}
<div style="display: @((Resultado != null && _visibleButton) ? "block" : "none")">
	<div class="row justify-content-center  mt-3">
		<button class="btn btn-primary col-md-6" @onclick="CloseButton">Nova Busca</button>
	</div>
</div>

<style>
	.readonly-bg {
		background-color: #fff !important; /* Define o fundo como branco */
	}

	.preencimento p {
		background-color: white;
		display: inline-block;
		border-bottom: 3px solid gray;
	}
</style>

@if (Resultado != null && !string.IsNullOrEmpty(Resultado.CNPJ))
{
	<div class="container">
		<div class="d-flex flex-wrap mt-3">
			<div class="container text-center">
				<h2>Situação Cadastral</h2>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>CNPJ:</label>
				</div>
				<p>@Resultado.CNPJ</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Abertura:</label>
				</div>
				<p>@Resultado.Abertura</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Situacao:</label>
				</div>
				<p>@Resultado.Situacao</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Tipo:</label>
				</div>
				<p>@Resultado.Tipo</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Nome:</label>
				</div>
				<p>@Resultado.Nome</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Fantasia:</label>
				</div>
				<p>@Resultado.Fantasia</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Logradouro:</label>
				</div>
				<p>@Resultado.Logradouro</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Numero:</label>
				</div>
				<p>@Resultado.Numero</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Municipio:</label>
				</div>
				<p>@Resultado.Municipio</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Bairro:</label>
				</div>
				<p>@Resultado.Bairro</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>UF:</label>
				</div>
				<p>@Resultado.UF</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>CEP:</label>
				</div>
				<p>@Resultado.CEP</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Email:</label>
				</div>
				<p>@Resultado.Email</p>
			</div>
			<div class="p-2 item preencimento">
				<div>
					<label>Telefone:</label>
				</div>
				<p>@Resultado.Telefone</p>
			</div>
		</div>
	</div>
	
}

@code {
	private string CNPJ;
	private ConsultaCnpjResponse? Resultado;
	public string ErrorMessage { get; set; }
	private bool isLoading = false;
	private bool _visibleAlert = true;
	private bool _visibleButton = true;
	private string cor = "#FF0000";

	private async Task Verificar()
	{
		isLoading = true;

		if (string.IsNullOrEmpty(CNPJ))
		{
			ErrorMessage = "Por favor, insira um CNPJ.";
			isLoading = false;
			return;
		}

		string cnpj = CNPJ.Replace("-", "").Replace(".", "").Replace("/", "");

		if (!cnpj.All(char.IsDigit))
		{
			ErrorMessage = "O CNPJ pode conter apenas dígitos.";
			isLoading = false;
			return;
		}

		if (cnpj.Length != 14)
		{
			ErrorMessage = "O CNPJ deve conter 14 números.";
			isLoading = false;
			return;
		}

		var client = new RestClient("https://s031554ygi.execute-api.us-east-1.amazonaws.com");
		var request = new RestRequest($"/dev/Cliente?cnpj={cnpj}", Method.Get);

		RestResponse response = await client.ExecuteAsync(request);

		if ((response.StatusCode == System.Net.HttpStatusCode.OK) || (response.StatusCode == System.Net.HttpStatusCode.Created))
			Resultado = JsonConvert.DeserializeObject<ConsultaCnpjResponse>(response.Content);

		isLoading = false;
		_visibleButton = Resultado != null;

		if (Resultado == null || string.IsNullOrEmpty(Resultado.CNPJ))
			ErrorMessage = "CNPJ não encontrado.";
	}

	private void CloseAlert()
	{
		_visibleAlert = false;
		ErrorMessage = string.Empty;
	}

	private void CloseButton()
	{
		_visibleButton = false;
		Resultado = null;
	}
}